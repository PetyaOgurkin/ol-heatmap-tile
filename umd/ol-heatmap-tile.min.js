!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("ol/proj"),require("ol/source/DataTile"),require("ol/layer/WebGLTile")):"function"==typeof define&&define.amd?define(["ol/proj","ol/source/DataTile","ol/layer/WebGLTile"],e):(t="undefined"!=typeof globalThis?globalThis:t||self).HeatmapTile=e(t.ol.proj,t.ol.source.DataTile,t.ol.layer.WebGLTile)}(this,(function(t,e,i){"use strict";function s(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var r=s(e),o=s(i);const a=/^#([0-9a-fA-F]{3,6})$/,h=/^rgb\(\s*(\d{1,3})\s*,\s*(\d{1,3})\s*,\s*(\d{1,3})\s*\)$/,n=t=>{if(4===t.length)return[parseInt(t[1]+t[1],16),parseInt(t[2]+t[2],16),parseInt(t[3]+t[3],16)];if(7===t.length)return[parseInt(t[1]+t[2],16),parseInt(t[3]+t[4],16),parseInt(t[5]+t[6],16)];throw Error("invalid hex color, use #fff or #ffffff")},l=t=>{const e=t.match(h);return[+e[1]%255,+e[2]%255,+e[3]%255]},d=(t,e,i)=>Math.round(e+(i-e)*t),u=t=>{const e=(t=>t.map((t=>{let[e,i]=t;if(-1!=i.search(a))return[e,n(i)];if(-1!=i.search(h))return[e,l(i)];throw Error("invalid schema color, use #ffffff or rgb(255, 255, 255)")})))(t);return t=>{const i=((t,e)=>{if(t<e[0][0])return e[0][1];for(let i=1;i<e.length;i++)if(t<e[i][0])return[e[i-1],e[i]];return e[e.length-1][1]})(t,e);return 3===i.length?`rgb(${i[0]},${i[1]},${i[2]})`:((t,e,i)=>`rgb(${d(t,e[0],i[0])},${d(t,e[1],i[1])},${d(t,e[2],i[2])})`)(((t,e,i)=>(t-e)/(i-e))(t,i[0][0],i[1][0]),i[0][1],i[1][1])}};class c extends o.default{grid=new Uint8Array;width=0;part=0;size=256;constructor(t){super({...t.olOptions,visible:!1}),this.renderValues=t.renderValues||!1,this.tileGrid=t.tileGrid||void 0,this.projection=t.projection||"EPSG:3857",this.colorSchema=t.colorSchema||[[0,"#CD0074"],[21,"#7209AB"],[43,"#3914B0"],[64,"#1240AC"],[106,"#009A9A"],[128,"#00CC00"],[149,"#9FEE00"],[170,"#FFFF00"],[191,"#FFD300"],[213,"#FFAA00"],[234,"#FF7400"],[255,"#FF0000"]],this.colors=u(this.colorSchema),this.compression=t.compression||this.renderValues?64:4,this.dataBbox=t.dataBbox||[-180,-90,180,90],this.renderBbox=t.renderBbox||this.dataBbox,this.valueMiniMaxes=t.valueMiniMaxes||[0,255],this.valueRoundDigits=t.valueRoundDigits||0,this.valuesFont=t.valuesFont||"24px sans-serif",this.valuesColor=t.valuesColor||"#fff",t.data?this.setData(t.data):t.url&&this.setUrl(t.url)}setColorSchema(t){this.colorSchema=t,this.colors=u(t)}setDataBbox(t){this.dataBbox=t,this.setRenderBbox(t),this._updatePart()}setRenderBbox(t){this.renderBbox=t}setTileGrid(t){this.tileGrid=t}setProjection(t){this.projection=t}setData(t){this.grid=t.grid,this.width=t.width,this._updatePart(),this._renderTiles()}setUrl(t){this.url=t,this._loadData()}setValuesFont(t){this.valuesFont=t}setValuesColor(t){this.valuesColor=t}setValueMiniMaxes(t){this.valueMiniMaxes=t}setValueRoundDigits(t){this.valueRoundDigits=t}getValueFromLonLat(t,e){return this._scaleValue(this._getGridValue(t,e))}refresh(){this.getRenderer().tileTextureCache_.clear(),this.changed()}_scaleValue(t){return(t*(this.valueMiniMaxes[1]-this.valueMiniMaxes[0])/255+this.valueMiniMaxes[0]).toFixed(this.valueRoundDigits)}_updatePart(){this.width&&this.dataBbox&&(this.part=Math.round(this.width/Math.abs(this.dataBbox[2]-this.dataBbox[0])))}_loadData(){const t=new Image;t.onload=()=>{const e=document.createElement("canvas"),i=e.getContext("2d");if(e.width=t.width,e.height=t.height,i){i.drawImage(t,0,0);const s=i.getImageData(0,0,t.width,t.height).data;e.style.display="none";const r=new Uint8Array(s.length/4);for(let t=0;t<s.length;t+=4)r[t/4]=s[t];this.setData({grid:r,width:t.width})}},this.url&&(t.src=this.url),t.crossOrigin="anonymous"}_renderTiles(){if(this.getSource())this.refresh();else{const t=this._getLoader();this.setSource(new r.default({loader:t,projection:this.projection,...this.tileGrid&&{tileGrid:this.tileGrid},transition:0})),this.setVisible(!0)}}_getLoader(){const e=document.createElement("canvas");e.width=this.size,e.height=this.size;const i=e.getContext("2d");i.font=this.valuesFont,i.fillStyle=this.valuesColor;const s=this.compression/2,r=this._getBboxConditionFunc();return(e,o,a)=>{const h=this.getSource().getTileGrid(),n=h.getOrigin(e),l=this.size*h.getResolution(e),d=[n[0]+l*o,n[1]+l*(-a-1),n[0]+l*(o+1),n[1]+l*-a];i.clearRect(0,0,this.size,this.size);const u=(d[2]-d[0])/this.size,c=this.renderValues?(t,e,r)=>i.fillText(this._scaleValue(t),e-s,this.size-r-s):(t,e,r)=>{i.fillStyle=this.colors(t),i.fillRect(e-s,this.size-r-s,this.compression,this.compression)};for(let e=0;e<=this.size;e+=this.compression)for(let i=0;i<=this.size;i+=this.compression){const o=t.toLonLat([d[0]+u*(e+s),d[1]+u*(i+s)],this.projection);if(r(o[0],o[1])){c(this._getGridValue(o[0],o[1]),e,i)}}return Promise.resolve(new Uint8Array(i.getImageData(0,0,this.size,this.size).data.buffer))}}_getBboxConditionFunc(){return this.renderBbox[2]<this.renderBbox[0]?(t,e)=>t>=this.renderBbox[0]&&e>=this.renderBbox[1]&&e<=this.renderBbox[3]||t>=-180&&t<=this.renderBbox[2]&&e>=this.renderBbox[1]&&e<=this.renderBbox[3]:(t,e)=>t>=this.renderBbox[0]&&t<=this.renderBbox[2]&&e>=this.renderBbox[1]&&e<=this.renderBbox[3]}_getGridValue(t,e){const i=e,s=this.dataBbox[2]<this.dataBbox[0]&&t<=this.dataBbox[2]?t+360:t,r=Math.floor(i*this.part)/this.part,o=Math.ceil(i*this.part)/this.part,a=Math.floor(s*this.part)/this.part,h=Math.ceil(s*this.part)/this.part,n=this.grid[(this.dataBbox[3]-r)*this.part*this.width+(a-this.dataBbox[0])*this.part],l=this.grid[(this.dataBbox[3]-r)*this.part*this.width+(h-this.dataBbox[0])*this.part],d=(o-r)*(h-a);return n*(o-i)*(h-s)/d+this.grid[(this.dataBbox[3]-o)*this.part*this.width+(a-this.dataBbox[0])*this.part]*(i-r)*(h-s)/d+l*(o-i)*(s-a)/d+this.grid[(this.dataBbox[3]-o)*this.part*this.width+(h-this.dataBbox[0])*this.part]*(i-r)*(s-a)/d}}return c}));
